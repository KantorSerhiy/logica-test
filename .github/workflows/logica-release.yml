name: New Repo sync

on:
  workflow_dispatch:
    inputs:
      branch-name:
        required: true
        description: Enter newest branch name

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 'main' branch
        uses: actions/checkout@v3
        with:
          ref: main
          clean: true

      - name: Fail if branch exists
        run: |
          BRANCH_NAME=${{ github.event.inputs.branch-name }}
          if git show-ref --verify --quiet $BRANCH_NAME; then
            echo "$BRANCH_NAME exists. Exiting with code 1."
            exit 1
          else
            echo "$BRANCH_NAME does not exist. Continuing."
          fi

      - name: Create and switch to new branch
        run: |
          git config user.name "Your Name"
          git config user.email "your-email@example.com"
          git checkout -b ${{ github.event.inputs.branch-name }}

      

      - name: Create 'logica' directory
        run: mkdir -p ./logica

      - name: Move 'main' contents to 'logica'
        run: |
          mv common ./logica
          mv compiler ./logica
          mv parser_py ./logica
          mv colab_logica.py ./logica
          mv __main__.py ./logica
          mv logica.py ./logica
          rm -rf examples
          rm -rf docs
          rm -rf integration_tests
          rm -rf lib
          rm -rf syntax
          rm -rf tools
          rm -rf tutorial
          rm -rf type_inference
          rm -rf CONTRIBUTING.md
          rm -rf LICENSE
          rm -rf run_all_tests.py
          rm -rf .DS_Store

      - name: Create __init__.py in logica folder
        run: |
          touch ./logica/__init__.py
          touch ./logica/common/__init__.py
          touch ./logica/common/data/__init__.py
          touch ./logica/compiler/__init__.py
          touch ./logica/compiler/dialect_libraries/__init__.py
          touch ./logica/parser_py/__init__.py


      - name: Commit and push changes to new branch
        run: |
          git add .
          git commit -m "Sync changes"
          git push origin ${{ github.event.inputs.branch-name }}

